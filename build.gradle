/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.4.2/samples
 */
plugins {
    id 'java'
}

group 'dapanda.front'
version '0.0.0'

apply plugin: 'application'

repositories {
    mavenCentral()
    maven {
        url 'https://raw.github.com/uedaueo/blancofw-maven2/gh-pages-poi4/'
    }
}

configurations {
    blancoFramework
}

dependencies {
    blancoFramework 'blanco.anttask:blanco-anttask:[2.0,3.0)'
    blancoFramework 'blanco.batchprocess:blanco-batchprocess:[2.0,3.0)'
    blancoFramework 'blanco.commons.io:blanco-commons:[2.0,3.0)'
    blancoFramework 'blanco.cg:blanco-cg:[2.0,3.0)'
    blancoFramework 'blanco.valueobject:blanco-valueobject:[2.0,3.0)'
    blancoFramework 'blanco.valueobjectts:blanco-valueobjectts:[0.0,1.0)'
    blancoFramework 'blanco.restgeneratorts:blanco-restgeneratorts:[0.0,1.0)'
    blancoFramework 'blanco.vuecomponent:blanco-vuecomponent:[0.0,1.0)'
    blancoFramework 'blanco.veevalidate:blanco-veevalidate:[0.0,1.0)'
    blancoFramework 'blanco.restgenerator:blanco-restgenerator:[0.0,1.0)'
    blancoFramework 'blanco.constants:blanco-constants:[2.0,3.0)'
    blancoFramework 'blanco.meta2xml:blanco-meta2xml:[2.0,3.0)'
    blancoFramework 'blanco.resourcebundle:blanco-resourcebundle:[2.0,3.0)'
    blancoFramework 'blanco.xml.bind:blanco-xmlbinding:[2.0,3.0)'
}

task metaObjects {
    logging.captureStandardOutput LogLevel.INFO
    group "blanco"
    description "Generate valueobjects source for typescript by blancoValueObjectTs"
    doFirst {
        println 'A task message which is logged at INFO level'
    }
    doLast {
        ant.taskdef(name: 'blancovalueobjectts',
                classname: 'blanco.valueobjectts.task.BlancoValueObjectTsTask',
                classpath: configurations.blancoFramework.asPath
        )
        ant.blancovalueobjectts(metadir: "${projectDir}" + getProperty("blanco.metadir") + "/meta/sample/objects",
                tmpdir: "${buildDir}/tmpObjects",
                targetdir: "${projectDir}/blanco",
                targetStyle: "maven",
                sheetType: 'php',
                tabs: 2,
                lineSeparator: 'LF',
                verbose: true,
                encoding: getProperty("blanco.encoding")
        )
    }
}

task metaLabels {
    logging.captureStandardOutput LogLevel.INFO
    group "blanco"
    description "Generate labes for typescript by blancoValueObjectTs"
    doFirst {
        println 'A task message which is logged at INFO level'
    }
    doLast {
        ant.taskdef(name: 'blancovalueobjectts',
                classname: 'blanco.valueobjectts.task.BlancoValueObjectTsTask',
                classpath: configurations.blancoFramework.asPath
        )
        ant.blancovalueobjectts(metadir: "${projectDir}/meta/sample/labels/ja",
                tmpdir: "${buildDir}/tmpLabelsJa",
                targetdir: "${projectDir}/blanco/main/vuecomponent",
                targetStyle: "free",
                sheetType: 'php',
                tabs: 2,
                lineSeparator: 'LF',
                verbose: true,
                encoding: getProperty("blanco.encoding")
        )
        ant.blancovalueobjectts(metadir: "${projectDir}/meta/sample/labels/en",
                tmpdir: "${buildDir}/tmpLabelsEn",
                targetdir: "${projectDir}/blanco/main/vuecomponent",
                targetStyle: "free",
                sheetType: 'php',
                tabs: 2,
                lineSeparator: 'LF',
                verbose: true,
                encoding: getProperty("blanco.encoding")
        )
    }
}

task metaMessages {
    logging.captureStandardOutput LogLevel.INFO
    group "blanco"
    description "Generate messages for typescript by blancoValueObjectTs"
    doFirst {
        println 'A task message which is logged at INFO level'
    }
    doLast {
        ant.taskdef(name: 'blancovalueobjectts',
                classname: 'blanco.valueobjectts.task.BlancoValueObjectTsTask',
                classpath: configurations.blancoFramework.asPath
        )
        ant.blancovalueobjectts(metadir: "${projectDir}" + getProperty("blanco.metadir") + "/meta/sample/messages/ja",
                tmpdir: "${buildDir}/tmpLabelsJa",
                targetdir: "${projectDir}/blanco/main/vuecomponent",
                targetStyle: "free",
                sheetType: 'php',
                tabs: 2,
                lineSeparator: 'LF',
                verbose: true,
                encoding: getProperty("blanco.encoding")
        )
        ant.blancovalueobjectts(metadir: "${projectDir}" + getProperty("blanco.metadir") + "/meta/sample/messages/en",
                tmpdir: "${buildDir}/tmpLabelsEn",
                targetdir: "${projectDir}/blanco/main/vuecomponent",
                targetStyle: "free",
                sheetType: 'php',
                tabs: 2,
                lineSeparator: 'LF',
                verbose: true,
                encoding: getProperty("blanco.encoding")
        )
    }
}

task metaComponents {
    dependsOn "metaObjects"
    logging.captureStandardOutput LogLevel.INFO
    group "blanco"
    description "Generate vue components for typescript by blancoVueComponent"
    doFirst {
        println 'A task message which is logged at INFO level'
    }
    doLast {
        ant.taskdef(name: 'blancovuecomponent',
                classname: 'blanco.vuecomponent.task.BlancoVueComponentTask',
                classpath: configurations.blancoFramework.asPath
        )
        ant.blancovuecomponent(metadir: "${projectDir}" + "/meta/sample/components",
                tmpdir: "${buildDir}/tmpComponents",
                targetdir: "${projectDir}/blanco/main/vuecomponent",
                targetStyle: "free",
                sheetType: 'php',
                encoding: getProperty("blanco.encoding"),
                verbose: "true",
                tabs: 2,
                searchTmpdir: "${buildDir}/tmpObjects",
                lineSeparator: 'LF',
                listClass: ""
        )
    }
}

task metaPages {
    dependsOn "metaComponents"
    logging.captureStandardOutput LogLevel.INFO
    group "blanco"
    description "Generate vue components for typescript by blancoVueComponent"
    doFirst {
        println 'A task message which is logged at INFO level'
    }
    doLast {
        ant.taskdef(name: 'blancovuecomponent',
                classname: 'blanco.vuecomponent.task.BlancoVueComponentTask',
                classpath: configurations.blancoFramework.asPath
        )
        ant.blancovuecomponent(metadir: "${projectDir}" + "/meta/sample/pages",
                tmpdir: "${buildDir}/tmpPages",
                targetdir: "${projectDir}/blanco/main/vuecomponent",
                targetStyle: "free",
                sheetType: 'php',
                encoding: getProperty("blanco.encoding"),
                verbose: "true",
                tabs: 2,
                searchTmpdir: "${buildDir}/tmpComponents,${buildDir}/tmpObjects",
                lineSeparator: 'LF',
                listClass: ""
        )
    }
}

task meta(dependsOn: [metaLabels, metaMessages, metaPages]) {
    logging.captureStandardOutput LogLevel.INFO
    group "blanco"
    description "Generate dapanda-front-core sources for typescript by blancoFramework"
}
