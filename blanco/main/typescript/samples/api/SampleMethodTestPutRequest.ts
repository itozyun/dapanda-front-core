/*
 * This source code has been generated by blanco Framework.
 */
import { ApiPutTelegram } from "%/blanco/restgenerator/valueobject/ApiPutTelegram";

/**
 * PUTメソッドの要求電文
 */
export class SampleMethodTestPutRequest extends ApiPutTelegram {
    /**
     * ユーザーID
     *
     * 規定値   [&quot;&quot;]
     */
    private fUserId: string = "";

    /**
     * パスワード
     *
     * 規定値   [&quot;&quot;]
     */
    private fPassword: string = "";

    /**
     * 規定値   [null]
     */
    private _additionalPath: string | undefined = undefined;

    /**
     * フィールド [userId]のセッターメソッド
     *
     * 項目の型 [ユーザーID]
     *
     * @param argUserId フィールド[userId]に格納したい値
     */
    set userId(argUserId: string) {
        this.fUserId = argUserId;
    }

    /**
     * フィールド[userId]のゲッターメソッド
     *
     * 項目の型 [ユーザーID]
     * 規定値   [&quot;&quot;]
     *
     * @return フィールド[userId]に格納されている値
     */
    get userId(): string {
        return this.fUserId;
    }

    /**
     * フィールド[userId]のゲッターメソッド
     *
     * 項目の型 [string]
     * ユーザーID
     *
     * @return フィールド[userId]の型名文字列
     */
    static typeUserId(): string | undefined {
        return "string";
    }

    /**
     * フィールド [password]のセッターメソッド
     *
     * 項目の型 [パスワード]
     *
     * @param argPassword フィールド[password]に格納したい値
     */
    set password(argPassword: string) {
        this.fPassword = argPassword;
    }

    /**
     * フィールド[password]のゲッターメソッド
     *
     * 項目の型 [パスワード]
     * 規定値   [&quot;&quot;]
     *
     * @return フィールド[password]に格納されている値
     */
    get password(): string {
        return this.fPassword;
    }

    /**
     * フィールド[password]のゲッターメソッド
     *
     * 項目の型 [string]
     * パスワード
     *
     * @return フィールド[password]の型名文字列
     */
    static typePassword(): string | undefined {
        return "string";
    }

    /**
     * Returns the name of this telegram class as a string.
     *
     * @return The class name of this telegram.
     */
    get telegramId(): string {
        return "SampleMethodTestPutRequest";
    }

    /**
     * Returns the kind of this telegram as a string.
     *
     * @return The kind of this telegram.
     */
    get telegramType(): string {
        return "Input";
    }

    /**
     * Returns the method of this telegram as a string.
     *
     * @return The method of this telegram.
     */
    get telegramMethod(): string {
        return "PUT";
    }

    /**
     * フィールド [_additionalPath]のセッターメソッド
     *
     * 項目の型 [string | undefined]
     *
     * @param argAdditionalPath フィールド[_additionalPath]に格納したい値
     */
    set additionalPath(argAdditionalPath: string | undefined) {
        this._additionalPath = argAdditionalPath;
    }

    /**
     * フィールド[_additionalPath]のゲッターメソッド
     *
     * 項目の型 [string|undefined]
     *
     * @return フィールド[_additionalPath]に格納されている値
     */
    get additionalPath(): string | undefined {
        return this._additionalPath;
    }

    /**
     * Get the path parameters from this telegram.
     *
     * @return A string returned by getPathParams
     */
    getPathParams(): string | undefined {
        let pathParams = "";
        if (typeof this.userId !== 'undefined') {
            pathParams += ("/" + this.userId);
        } else {
            throw 'Invalid PathParam, userId is undefined.';
        }
        return pathParams;
    }

    /**
     * Get the query parameters from this telegram.
     *
     * @return A string returned by getQueryParams
     */
    getQueryParams(): any {
        return {
            password: this.password
        };
    }

    /**
     * Get the body parameters from this telegram.
     *
     * @return A string returned by getBodyParams
     */
    getBodyParams(): any {
        return undefined;
    }

    /**
     * Gets the properties to be written to JSON from this telegram.
     *
     * @return An object returned by toJSON
     */
    toJSON(): any {
        return {
            userId: this.userId,
            password: this.password
        };
    }
}
